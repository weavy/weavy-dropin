@model MessageModel
@{

  bool attachments = Feature.Attachments.IsEnabledFor(Model.Parent); ;
  bool cloudfiles = attachments && Feature.CloudFiles.IsEnabledFor(Model.Parent) && ConfigurationService.BlobProviders.Any();
  bool embeds = Feature.Embeds.IsEnabledFor(Model.Parent);
  bool meetings = Feature.Meetings.IsEnabledFor(Model.Parent) && (ConfigurationService.TeamsMeetings || ConfigurationService.ZoomMeetings);
  // TODO: add support for polls in message editor, for now we disable it
  //bool polls = Feature.Polls.IsEnabledFor(Model.Parent);  
  bool polls = false;

  bool typing = Feature.Typing.IsEnabledFor(Model.Parent);

  var embedUrl = Model?.Message?.Embed?.OriginalUrl;

  var formAttributes = new Dictionary<string, object>();
  formAttributes["data-controller"] = "editor";
  formAttributes["data-editor-placeholder-value"] = @T["Type a message..."];
  formAttributes["data-editor-autofocus-value"] = true;
  formAttributes["data-editor-draft-value"] = true;
  formAttributes["data-editor-mentions-value"] = Feature.Mentions.IsEnabledFor(Model.Parent);
  formAttributes["data-action"] = "submit->editor#prepare editor:placeholder->message#showPlaceholder";

  if (typing) {
    formAttributes["data-action"] += " editor:typing->message#notifyTyping";
  }

  if (attachments) {
    formAttributes["data-controller"] += " attachments";
    formAttributes["data-attachments-uploading-class"] = "wy-uploading";
    formAttributes["data-attachments-dragging-class"] = "wy-message-editor-dragging";
    formAttributes["data-attachments-target"] = "dragzone";
    formAttributes["data-action"] += " editor:filePasted->attachments#pasteFile";
  }
  if (cloudfiles) {
    formAttributes["data-controller"] += " file-picker";
  }

  if (embeds) {
    formAttributes["data-controller"] += " embed";
    formAttributes["data-embed-choose-class"] = "wy-embed-show-cycle";
    formAttributes["data-embed-target"] = "form";
    formAttributes["data-action"] += " editor:updated->embed#updated";
  }

  if (meetings) {
    formAttributes["data-controller"] += " meetings";
    formAttributes["data-meetings-uploading-class"] = "wy-uploading";
    if (ConfigurationService.TeamsMeetings) {
      formAttributes["data-meetings-teams-authentication-url-value"] = ConfigurationService.TeamsAuthenticationUrl;
    }
    if (ConfigurationService.ZoomMeetings) {
      formAttributes["data-meetings-zoom-authentication-url-value"] = ConfigurationService.ZoomAuthenticationUrl;
    }
  }

  if (polls) {
    formAttributes["data-controller"] += " polls";
  }

}
<turbo-frame id="@DomId(Model.Parent)" class="wy-footerbar wy-message-editor wy-message-editor-bottom" data-adjust-scrollbar-bottom>

  <form action="@Url.Action(nameof(ChatController.InsertMessage))" , new { id=Model.Parent.Id })" asp-attributes="@formAttributes" class="wy-message-form" method="post" autocomplete="off" novalidate>

    @* polls *@
    @if (polls) {
      @if (Model?.Message?.Options.Any() ?? false) {
        var options = Model.Message.Options.ToArray();
        <div data-polls-target="list" data-editor-target="polls" class="wy-poll-form">
          @for (int i = 0; i < options.Length; i++) {
            <input type="hidden" name="Options[@i].Id" value="@options[i].Id" />
            <input class="wy-input" type="text" name="Options[@i].Text" value="@options[i].Text" placeholder="@T["+ add an option"]" />
          }
          @if (options.Length > 0) {
            <input class="wy-input" type="text" name="Options[@options.Length].Text" placeholder="@T["+ add an option"]" data-action="focus->polls#addOption" />
          }
        </div>
      } else {
        <div data-polls-target="list" data-editor-target="polls" class="wy-poll-form" hidden></div>
      }
    }

    @* attachments *@
    @if (attachments) {
      @if (Model?.Message?.Attachments.Any() ?? false) {
        <div class="wy-picker-list" data-editor-target="attachments" data-attachments-target="list" data-file-picker-target="list">
          @foreach (var attachment in Model.Message.Attachments) {
            <div class="wy-picker-list-item">
              <icon for="@attachment.Blob" />
              <span class="wy-picker-list-item-title">@attachment.Name</span>
              <input type="hidden" name="attachments" value="@attachment.Id" />
              <button type="button" class="wy-button wy-button-icon" data-action="attachments#remove"><icon name="close-circle" /></button>
            </div>
          }
        </div>
      } else {
        <div class="wy-picker-list" data-editor-target="attachments" data-attachments-target="list" data-file-picker-target="list"></div>
      }
    }

    @* meetings*@
    @if (meetings) {
      @if (Model?.Message?.Meeting != null) {
        <div class="wy-picker-list" data-editor-target="meetings" data-meetings-target="list">
          <turbo-frame id="@DomId($"meeting{Model.Message.MeetingId}")">
            <div class="wy-picker-list-item">
              <icon name="@Model.Message.Meeting.Icon" />
              <span class="wy-picker-list-item-title">@Model.Message.Meeting.Title</span>
              <input type="hidden" name="MeetingId" value="@Model.Message.MeetingId" />
              <button type="button" class="wy-button wy-button-icon" data-action="meetings#remove" data-meetings-id-param="@Model.Message.MeetingId"><icon name="close-circle" /></button>
            </div>
          </turbo-frame>
        </div>
      } else {
        <div class="wy-picker-list" data-editor-target="meetings" data-meetings-target="list"></div>
      }
    }

    @if (embeds) {
      // TODO: embed preview
      <div class="wy-embed-preview" data-embed-target="results"></div>
    }

    @* editor *@
    <div class="wy-message-editor-inputs" data-attachments-target="dropzone">
      @if (attachments || cloudfiles || meetings || polls) {
        <div class="wy-dropup dropup">
          <button class="wy-button wy-button-icon" data-file-picker-target="dropdown" data-bs-toggle="dropdown" title="@T["Attach"]"><icon name="plus" />@Svg.Spinner(size: 20, spin: true)</button>
          <div class="wy-dropdown-menu dropdown-menu">
            @if (attachments) {
              <div>
                <button type="button" class="wy-dropdown-item" data-action="attachments#select"><icon name="attachment" />@T["File from device"]</button>
                <input class="form-control" type="file" accept="@FileUtils.GetAcceptedFileTypes()" data-attachments-target="input" data-action="change->attachments#upload" multiple hidden />
              </div>
            }
            @if (cloudfiles) {
              <button type="button" class="wy-dropdown-item" data-action="click->file-picker#open"><icon name="cloud" />@T["File from cloud"]</button>
            }
            @if (meetings) {
              @if (ConfigurationService.TeamsMeetings) {
                <button type="button" class="wy-dropdown-item" data-meetings-target="button" data-action="meetings#add" data-meetings-provider-param="teams"><icon name="microsoft-teams" color="native" /> @T["Teams meeting"]</button>
              }
              @if (ConfigurationService.ZoomMeetings) {
                <button type="button" class="wy-dropdown-item" data-meetings-target="button" data-action="meetings#add" data-meetings-provider-param="zoom"><icon name="zoom" color="native" /> @T["Zoom meeting"]</button>
              }
            }
            @if (polls) {
              <button type="button" class="wy-dropdown-item" data-polls-target="button" data-action="polls#addPoll"><icon name="poll-box" />@T["Poll"]</button>
            }
          </div>

        </div>
      }
      <div class="wy-message-editor-text">
        <input type="hidden" asp-for="Text" data-editor-target="control" />
        <div class="wy-message-editor-container" data-editor-target="container"></div>
      </div>
      <button type="submit" class="wy-button wy-button-icon" data-editor-target="button"><icon name="send" color="primary" /></button>
    </div>
  </form>

</turbo-frame>
