@model Message
@{

  var user = Model.CreatedBy();
  var attachments = Model.AttachmentIds.Any() ? Model.Attachments() : new List<File>();
  var images = attachments.Where(x => FileUtils.IsImage(x.Blob.Name) && x.ThumbUrl(null, null) != null);
  var files = attachments.Except(images);
  var me = Model.CreatedById == WeavyContext.Current.User.Id;
  var options = Model.Options;

  // special styling when message contains only emoji
  var emoji = Model.Text != null && Model.AttachmentIds.IsNullOrEmpty() && Model.EmbedId == null && Model.MeetingId == null && string.IsNullOrWhiteSpace(Emojione.RemoveEmoji(Model.Text));

  // attach stimulus controller
  var isInitialLoad = ViewData["IsInitialLoad"] != null;
  string controller = null;
  if (!isInitialLoad) {
    // scroll if current user sent message, otherwise show alert about new messages
    // HACK: don't scroll if reactions caused an update to the message
    if (WeavyContext.Current.User.Id == Model.CreatedById && !Model.Reactions.Any()) {
      controller = "scroll";
    }
  }

  // get data for "new messages" and "read by" indicators (get conversation from ViewData instead of Model.Parent when possible to avoid N+1 member lookup for every message)
  var conversation = ViewData[nameof(Message.Parent)] as Conversation;
  if (conversation == null) {
    conversation = Model.Parent as Conversation;
  }
  //var readBy = conversation.Members.Where(x => x.Id != WeavyContext.Current.User.Id && x.MarkedId == Model.Id);
}

<turbo-frame id="@DomId(Model)">

  <div id="@Model.Eid()" class="wy-message @Html.If(me, "wy-message-me") @Html.If(emoji, "wy-message-emoji")" data-controller="@controller">
    @if (!me) {
      <div class="wy-message-author"><avatar for="@user" size="32" /></div>
    }
    <div class="wy-message-content">
      <div class="wy-message-meta">
        @if (!me && (Model.Parent is ChatRoom || Model.Parent is Chat)) {
          <text>@user.DisplayName Â·</text>
        }
        <time datetime="@Model.CreatedAt" format="t" />
      </div>
      <div class="wy-message-bubble">
        @if (images.Any()) {  
          <partial name="_ImageGrid" model="images" />
        }

        @if (files.Any()) {
          <partial name="_Attachments" model="files" />
        }

        @if (Model.Meeting != null) {
          <partial name="_Meeting" model="Model.Meeting" />
        }

        @if (Model.Text != null) {
          <div class="wy-content">@Html.Raw(MarkdownUtils.ToHtml(Model.Text))</div>
        }

        @if(options.Any()){
          <partial name="_Poll" model="Model" />
        }

        <div class="wy-reactions-line">
          <partial name="_Reactions" />
          <partial name="_ReactionMenu" />
        </div>
      </div>
    </div>
  </div>

  <partial name="_ReadBy" />

  @* status: sent, delivered, seen etc *@
@*  @if (!isInitialLoad && WeavyContext.Current.User.Id != Model.CreatedById) {
    <avatar for="user" size="18" id="readby-@user.Id" title="@T["Seen by {0} {1}", user.DisplayName, Model.CreatedAt.When()]" data-controller="readby" data-readby-who-value="@user.Id" data-readby-when-value="@Model.CreatedAt.AsSortableDate()" />
  }
*@  @*<div class="wy-readby-status" data-createdat="@Model.CreatedAt.AsSortableDate()">
    @if (readBy.Any()) {
      foreach (var member in readBy) {
        <partial name="_ReadBy" model="member" />
      }
    }
  </div>*@
</turbo-frame>

@if (conversation.IsUnread() && Model.Id == conversation.Member.MarkedId) {
  <div id="message_toaster" data-controller="scroll" data-scroll-deferred-value="true" data-action="click->scroll#toBottom" class="wy-toast wy-toast-action">@T["New messages"]</div>
}
