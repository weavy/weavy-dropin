@model Message
@{
  var user = Model.CreatedBy();
  var attachments = Model.AttachmentIds.Any() ? Model.Attachments() : new List<File>();
  var images = attachments.Where(x => FileUtils.IsImage(x.Blob.Name) && x.ThumbPlaceholderUrl() != null);
  var files = attachments.Except(images);
  var me = Model.CreatedById == WeavyContext.Current.User.Id;

  // special styling when message contains only emoji
  var emoji = Model.Text != null && Model.AttachmentIds.IsNullOrEmpty() && Model.EmbedId == null && Model.MeetingId == null && string.IsNullOrWhiteSpace(Emojione.RemoveEmoji(Model.Text));

  // attach stimulus controller
  var isInitialLoad = ViewData["IsInitialLoad"] != null;
  string controller = null;
  if (!isInitialLoad) {
    // scroll if current user sent message, otherwise show alert about new messages
    if (WeavyContext.Current.User.Id == Model.CreatedById) {
      controller = "scroll";
    }
  }

  var NewMessageLabelBeforeId = ViewData["NewMessageLabelBeforeId"] as int?;
  var conversation = ViewData["Conversation"] as Conversation;
   
  IEnumerable<Member> readBy = Array.Empty<Member>();
  if (conversation != null) {
    readBy = conversation.GetReadBy(Model);
  }
}

@if (NewMessageLabelBeforeId == Model.Id) {
  <div id="message_toaster" data-controller="scroll" data-scroll-deferred-value="true" data-action="click->scroll#toBottom" class="message-toaster p-2 px-3 mb-2 bg-primary text-white rounded-pill align-self-center text-center">@T["New messages"]</div>
}

<turbo-frame id="@DomId(Model)">

  <div id="@Model.Uid()" class="message @Html.If(me, "me") @Html.If(emoji, "emoji")" data-controller="@controller">
    @if (!me) {
      <div class="author"><avatar for="@user" size="32" /></div>
    }

    <div class="content">
      <div class="meta">
        <a href="#@Model.Uid()">
          @if (!me && Model.Parent is ChatRoom) {
            <text>@user.GetTitle() Â·</text>
          }
          <time datetime="@Model.CreatedAt" />
        </a>
      </div>
      <div class="bubble">
        <partial name="_ReactionMenu" />

        @if (images.Any()) {  
          <partial name="_ImageGrid" model="images" />
        }

        @if (files.Any()) {
          <partial name="_Attachments" model="files" />
        }

        @if (Model.Meeting != null) {
          <partial name="_Meeting" model="Model.Meeting" />
        }

        @if (Model.Text != null) {
          <div class="text">@Html.Raw(TextUtils.ToHtml(Model.Text))</div>
        }
        
        <partial name="_ReactionList" />
      </div>
    </div>
  </div>

  @* status: sent, delivered, seen etc *@
  @if (!isInitialLoad && WeavyContext.Current.User.Id != Model.CreatedById) {
    <avatar for="user" size="18" id="readby-@user.Id" title="@T["Seen by {0} {1}", Model.GetTitle(), Model.CreatedAt.When()]" data-controller="readby" data-readby-who-value="@user.Id" data-readby-when-value="@Model.CreatedAt.AsSortableDate()" />
  }
  <div class="status" data-createdat="@Model.CreatedAt.AsSortableDate()">
    @if (readBy.Any()) {
      foreach (var member in readBy) {
        <partial name="_ReadBy" model="member" />
      }
    }
  </div>
</turbo-frame>
