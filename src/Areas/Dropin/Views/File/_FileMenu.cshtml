@model File
<div class="wy-dropdown">
  <button type="button" class="wy-button wy-button-icon" data-bs-toggle="dropdown"><icon name="dots-vertical" /></button>
  <div class="wy-dropdown-menu dropdown-menu">
    @if (Model.IsTrashed()) {
      <form asp-controller="@typeof(FileController).ControllerName()" asp-action="@nameof(FileController.Restore)" asp-route-id="@Model.Id">
        <button type="submit" class="wy-dropdown-item"><icon name="restore-from-trash" /> @T["Restore"]</button>
      </form>
      <hr class="wy-dropdown-divider">
      <form asp-controller="@typeof(FileController).ControllerName()" asp-action="@nameof(FileController.Delete)" asp-route-id="@Model.Id">
        @Html.HttpMethodOverride(HttpMethod.Delete)
        <button type="submit" class="wy-dropdown-item"><icon name="delete-forever" />@T["Delete"]</button>
      </form>
    } else {
      @if (Model.Blob.Provider != null) {
        <a class="wy-dropdown-item" href="@Model.Blob.Link" target="_blank"><icon name="@Model.Blob.Provider.ToKebabCase()" /> @T["Open in {0}", Model.Blob.Provider]</a>
      } else {
        var officeUrl = Model.OfficeUrl(hmac: true);
        if (officeUrl != null) {
          <a class="wy-dropdown-item" href="@officeUrl"><icon for="@Model.Blob" /> @T["Open in {0}", FileUtils.OpenWith(Model.Name)] </a>
        }
        <a class="wy-dropdown-item" href="@Model.Url()" download><icon name="download" />@T["Download"]</a>
      }
      <button class="wy-dropdown-item" data-action="click->rename#open"><icon name="textbox" />@T["Rename"]</button>
      <partial name="_FollowMenuItem" />
      <hr class="wy-dropdown-divider">
      <form asp-controller="@typeof(FileController).ControllerName()" asp-action="@nameof(FileController.Trash)" asp-route-id="@Model.Id">
        <button type="submit" class="wy-dropdown-item"><icon name="delete" /> @T["Trash"]</button>
      </form>
    }
  </div>
</div>
