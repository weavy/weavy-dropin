@use "base/vars";
@use "base/colors";
@use "base/scroll";
@use "base/svg";
@use "comment-editor";

.wy-comment-editor {
  position: relative;

  .ͼ1 .cm-scroller {
    font-family: unset;
    line-height: 1.5;
  }

  .ͼ1 .cm-widgetBuffer {
    vertical-align: unset;
  }

  .ͼ1 .cm-placeholder {
    color: #{colors.$outline};
  }

  .ͼ1.cm-editor {
    @extend %comment-editor-textfield;

    &.cm-focused {
      /* default theme in codemirror seems difficult to override */
      --wy-component-color: #{colors.$on-background};
      color: var(--wy-component-color);
      border-color: #{colors.$primary};
      outline: 0;
    }

    .cm-content {
      @extend %comment-editor-textcontent;
    }

    .cm-scroller {
      overflow: auto;

      .wy-scrollbars & {
        @include scroll.custom-scrollbar;
        // scrollbar offsets
        @include scroll.scrollbar-top-padding(0.375rem);
        @include scroll.scrollbar-bottom-padding(0.375rem);
      }
    }
  }

  .wy-is-invalid + .cm-editor {
    border-color: colors.$error !important;
  }
  // autocomplete dropdown menu
  .ͼ1 {
    .cm-tooltip.cm-tooltip-autocomplete > ul {
      font-family: unset;
      max-height: 15rem; // room for 5 items

      > li {
        padding: 0;
      }
    }
  }

  .ͼ2 {
    .cm-tooltip {
      border: none;
      background-clip: padding-box;
      background-color: #{colors.$surface-2};
      color: #{colors.$on-surface};
      border-radius: vars.$border-radius;
      box-shadow: vars.$shadow-level1;
      overflow: hidden;
      z-index: vars.$zindex-dropdown;
    }

    .cm-tooltip-autocomplete ul li[aria-selected] {
      background: #{colors.$primary-container};
      color: unset;
    }
  }

  .cm-tooltip-autocomplete {
    .cm-completionLabel {
      display: none;
    }

    .wy-item-hover:hover, .wy-item-hover:focus {
      background: #{colors.$surface-variant};
    }

    .wy-avatar {
      width: 32px;
      height: 32px;
    }
  }
}
