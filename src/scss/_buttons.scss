/// <reference path="core" />

// make a button look and behave like an anchor <a href=""></a>
.btn-anchor {
  border: none;
  color: $btn-link-color;
  display: inline;
  font-weight: $font-weight-normal;
  padding: 0;
  text-decoration: $link-decoration;
  vertical-align: unset;

  &:hover {
    color: $btn-link-hover-color;
    text-decoration: $link-hover-decoration;
  }

  &:focus {
    box-shadow: none;
  }

  &:disabled,
  &.disabled {
    color: $btn-link-disabled-color;
  }
}

.btn-icon {
  background-color: transparent;
  border: none;
  border-radius: 50%;
  box-shadow: none !important;
  color: $icon-color;
  line-height: 1;
  padding: .25rem;
  align-items: center;
  justify-content: center;
  text-transform: none;
  width: 2rem;
  height: 2rem;
  position: relative; // so that we can position .badge


  &:hover, &:focus {
    color: $icon-hover-color;
    background-color: $icon-hover-bg;
  }

  &:focus, &.active {
    background-color: $icon-focus-bg;
  }
  // color variants
  @each $color, $value in $theme-colors {
    &.btn-#{$color} {
      color: $value;

      &:hover, &:focus {
        $c: color-contrast($value);
        // review: use shades instead?
        color: if($c == $color-contrast-light, shade-color($value, $btn-hover-bg-shade-amount), tint-color($value, $btn-hover-bg-tint-amount));
        background-color: $icon-hover-bg;
      }

      &:focus {
        background-color: $icon-focus-bg;
      }
    }
  }

  span {
    margin-left: .25rem;
  }

  // spinner, e.g. for attachments upload etc.
  .spinner:not(.spin) {
      display:none;
  }

  // badge, e.g. notification count
  .badge {
    font-size: $font-size-xs;
    position: absolute;
    right: 0;
    top: 0;
    border-radius: 1rem;
    margin: 0;
    padding: .25rem;
    min-width: 1rem;
    max-width: 2rem;
    height: 1rem;
    line-height: .5rem;
    display: block;
    text-align: center;
    @include text-truncate();

    &:empty {
      display: none;
    }
  }
}

.btn-link:focus {
  box-shadow: none;
}

.btn-circle {
  @extend .rounded-circle;
  display: inline-flex;
  width: 2.5rem; // 3rem?
  height: 2.5rem;
  padding: 0;

  > .i, > .e {
    margin: auto !important;
    transition: transform .3s;
    transform: rotate(0deg);
  }

  &.btn-sm {
    width: 2rem;
    height: 2rem;
  }

  &.btn-lg {
    width: 3rem; // 4rem?
    height: 3rem;
  }
}
